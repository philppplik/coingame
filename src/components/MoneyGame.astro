---
---
<div class="game-container">
  <div class="stats">
    <div class="money">Money: $<span id="money">0</span></div>
    <div class="tax-info">Next Tax: <span id="nextTax">60</span>s</div>
    <div class="tax-rate">Tax Rate: <span id="taxRate">10</span>%</div>
  </div>
  
  <div class="click-area" id="clickArea">
    <span class="click-text">Click to earn money!</span>
  </div>
  
  <div class="upgrades">
    <h2>Upgrades</h2>
    <button id="clickUpgrade" class="upgrade-btn">
      Upgrade Click Value ($<span id="clickUpgradeCost">10</span>)
      <div class="description">Current: $<span id="clickValue">1</span> per click</div>
    </button>
    <button id="taxReducer" class="upgrade-btn">
      Reduce Tax Rate ($<span id="taxReducerCost">50</span>)
      <div class="description">Reduces tax rate by 1%</div>
    </button>
    <button id="autoClicker" class="upgrade-btn">
      Auto Clicker ($<span id="autoClickerCost">100</span>)
      <div class="description">Clicks automatically every second</div>
    </button>
  </div>
</div>

<style>
  .game-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
    color: white;
  }

  .stats {
    display: flex;
    justify-content: space-between;
    margin-bottom: 2rem;
    font-size: 1.2rem;
    background: rgba(35, 38, 45, 0.8);
    padding: 1rem;
    border-radius: 8px;
  }

  .click-area {
    width: 100%;
    height: 200px;
    background: linear-gradient(45deg, #2a2d38, #23262d);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: transform 0.1s;
    margin-bottom: 2rem;
    border: 2px solid rgba(var(--accent), 0.2);
  }

  .click-area:active {
    transform: scale(0.98);
  }

  .click-text {
    font-size: 1.5rem;
    color: rgba(255, 255, 255, 0.8);
  }

  .upgrades {
    display: grid;
    gap: 1rem;
  }

  .upgrade-btn {
    background: #23262d;
    border: 1px solid rgba(var(--accent), 0.3);
    color: white;
    padding: 1rem;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s;
    text-align: left;
  }

  .upgrade-btn:hover {
    background: rgba(var(--accent), 0.2);
  }

  .upgrade-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .description {
    font-size: 0.8rem;
    opacity: 0.7;
    margin-top: 0.5rem;
  }

  @keyframes moneyFloat {
    0% {
      transform: translateY(0);
      opacity: 1;
    }
    100% {
      transform: translateY(-50px);
      opacity: 0;
    }
  }

  .money-particle {
    position: absolute;
    pointer-events: none;
    animation: moneyFloat 1s ease-out forwards;
  }
</style>

<script>
  let money = 0;
  let clickValue = 1;
  let taxRate = 10;
  let nextTaxTime = 60;
  let autoClickerCount = 0;

  const upgradeCosts = {
    clickUpgrade: 10,
    taxReducer: 50,
    autoClicker: 100
  };

  function updateDisplay() {
    document.getElementById('money').textContent = money.toFixed(2);
    document.getElementById('clickValue').textContent = clickValue;
    document.getElementById('taxRate').textContent = taxRate;
    document.getElementById('nextTax').textContent = nextTaxTime;
    
    // Update upgrade buttons
    document.getElementById('clickUpgrade').disabled = money < upgradeCosts.clickUpgrade;
    document.getElementById('taxReducer').disabled = money < upgradeCosts.taxReducer;
    document.getElementById('autoClicker').disabled = money < upgradeCosts.autoClicker;
  }

  function createMoneyParticle(x, y) {
    const particle = document.createElement('div');
    particle.className = 'money-particle';
    particle.textContent = `+$${clickValue}`;
    particle.style.left = `${x}px`;
    particle.style.top = `${y}px`;
    document.body.appendChild(particle);
    setTimeout(() => particle.remove(), 1000);
  }

  function earnMoney(event) {
    money += clickValue;
    if (event) {
      createMoneyParticle(event.clientX, event.clientY);
    }
    updateDisplay();
  }

  function applyTax() {
    const taxAmount = (money * taxRate) / 100;
    money = Math.max(0, money - taxAmount);
    updateDisplay();
  }

  // Click area
  document.getElementById('clickArea').addEventListener('click', earnMoney);

  // Upgrades
  document.getElementById('clickUpgrade').addEventListener('click', () => {
    if (money >= upgradeCosts.clickUpgrade) {
      money -= upgradeCosts.clickUpgrade;
      clickValue += 1;
      upgradeCosts.clickUpgrade = Math.floor(upgradeCosts.clickUpgrade * 1.5);
      document.getElementById('clickUpgradeCost').textContent = upgradeCosts.clickUpgrade;
      updateDisplay();
    }
  });

  document.getElementById('taxReducer').addEventListener('click', () => {
    if (money >= upgradeCosts.taxReducer) {
      money -= upgradeCosts.taxReducer;
      taxRate = Math.max(1, taxRate - 1);
      upgradeCosts.taxReducer = Math.floor(upgradeCosts.taxReducer * 1.5);
      document.getElementById('taxReducerCost').textContent = upgradeCosts.taxReducer;
      updateDisplay();
    }
  });

  document.getElementById('autoClicker').addEventListener('click', () => {
    if (money >= upgradeCosts.autoClicker) {
      money -= upgradeCosts.autoClicker;
      autoClickerCount++;
      upgradeCosts.autoClicker = Math.floor(upgradeCosts.autoClicker * 1.8);
      document.getElementById('autoClickerCost').textContent = upgradeCosts.autoClicker;
      updateDisplay();
    }
  });

  // Game loops
  setInterval(() => {
    nextTaxTime--;
    if (nextTaxTime <= 0) {
      applyTax();
      nextTaxTime = 60;
    }
    updateDisplay();
  }, 1000);

  // Auto clicker loop
  setInterval(() => {
    if (autoClickerCount > 0) {
      money += clickValue * autoClickerCount;
      updateDisplay();
    }
  }, 1000);

  // Initial display update
  updateDisplay();
</script>